- if !(@content_template ||= @page.template).blank?
  = hidden_field_tag "#{page_part_name(0)}[name]", "body", :id => "page_parts_0_name"
  = hidden_field_tag "#{page_part_name(0)}[filter_id]", nil, :id => "page_parts_0_filter_id"
  = hidden_field_tag "#{page_part_name(0)}[content]", @content_template.content, :id => "page_parts_0_content"
  - if gt8
    = hidden_field_tag "page[parts_attributes][0][id]", @page.part(:body).try(:[], 'id')
  - if defined?(ConcurrentDraftExtension)
    = hidden_field_tag "#{page_part_name(0)}[draft_content]", @content_template.content, :id => 'page_parts_0_draft_content'
  = hidden_field 'page', 'template_id', :value => @content_template.id
  = hidden_field 'page', 'layout_id', :value => @content_template.layout_id
  - unless @content_template.page_class_name.blank?
    = hidden_field 'page', 'class_name', :value => @content_template.page_class_name
  - @content_template.template_parts.each_with_index do |part, index|
    = render :partial => "edit_template_part", :object => part, :locals => {:index => index + 1}
  = render_region :parts_bottom
  
- else
  = defaults['edit_page_parts']
  = hidden_field 'page', 'template_id', :value => nil
  .row
    %p
      %label{:for=>"page_layout_id"}
        Layout
      = select "page", "layout_id", Layout.find(:all).map { |s| [s.name, s.id] }
    %p
      %label{:for=>"page_class_name"}
        Page Type
      = select "page", "class_name", [['<normal>', '']] + Page.descendants.map { |p| [p.display_name, p.name] }.sort_by { |p| p.first }
      
%p
  %label{:for=>"page_status_id"}
    Status
  = select "page", "status_id", Status.find_all.map { |s| [s.name, s.id] }, {}
- if @config['page.edit.published_date?']
  %p#publication-date{:style => "display: none"}
    %label{:for=>"page_published_at"}
      Published At
    = datetime_select "page", "published_at", :disabled => true
    
%span.clear &nbsp;        
= updated_stamp @page
  
- content_for :page_css do
  :sass
    #content .textarea, #content .text
      :width 100%